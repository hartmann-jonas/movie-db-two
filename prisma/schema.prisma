// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Local Postgres dev.db
//datasource db {
//  provider = "postgresql"
//  url = env("DEVELOPMENT_POSTGRES")
//}

// Vercel PostgreSQL
//datasource db {
//  provider = "postgresql"
//  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
//}

// Render PostgreSQL
//datasource db {
//  provider = "postgresql"
//  url = env("RENDER_DATABASE_URL")
//}

// Neon PostgreSQL
datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

//Create table User
model User {
  id            String @id @unique @default(uuid())
  username      String @unique
  passwordHash  String
  userAuthToken String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role            Roles   @relation(fields: [roleId], references: [id])
  roleId          Int
  favorite_movies Movie[] @relation("MovieFavourites")
  favourite_shows Show[] @relation("ShowFavourites")
  liked_movies    Movie[] @relation("MovieLikes")
  liked_shows     Show[] @relation("ShowLikes")
  movie_comments  MovieComments[]
  show_comments   ShowComments[]
}

//Create table Roles
model Roles {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
}

//Create table Favourites

model Movie {
  id           Int        @id @unique @default(autoincrement())
  favorited_by User[]     @relation("MovieFavourites")
  likes        User[]     @relation("MovieLikes")
  genres     Genres[]
  comments  MovieComments[]
}

model Show {
  id            Int      @id @unique @default(autoincrement())
  favourited_by User[]   @relation("ShowFavourites")
  likes         User[]   @relation("ShowLikes")
  comments      ShowComments[]
}

model Genres {
  id      Int     @id @unique @default(autoincrement())
  genre   String
  movie   Movie[]
}

model MovieComments {
  id        Int       @id @unique @default(autoincrement())
  comment   String
  user      User[]
  movie     Movie[]
  createdAt DateTime  @default(now())
}

model ShowComments {
  id        Int       @id @unique @default(autoincrement())
  comment   String
  user      User[]
  show      Show[]
  createdAt DateTime  @default(now())
  }
